name: Sync HTML from PHP

on:
  push:
    paths:
      - 'vega/**/*.php'
    branches:
      - main
  workflow_dispatch:
    inputs:
      server_url:
        description: 'PHP server URL'
        required: false
        default: 'http://localhost:8080'
        type: string

jobs:
  sync-html:
    runs-on: ubuntu-latest
    env:
      TURSO_DATABASE_URL: ${{ secrets.TURSO_DATABASE_URL }}
      TURSO_AUTH_TOKEN: ${{ secrets.TURSO_AUTH_TOKEN }}
    permissions:
      contents: write
      pull-requests: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'pnpm'
    
    - name: Install dependencies and link CLI
      run: |
        pnpm install
        pnpm run link-all
    
    - name: Configure Git
      run: |
        git config --global user.name "VegaShare Bot"
        git config --global user.email "vegashare-bot@noreply.github.com"
    
    - name: Check for vega directory
      run: |
        echo "üîç Checking for vega directory..."
        if [ -d "vega" ]; then
          echo "‚úÖ Vega directory found"
          echo "üìÅ Contents: $(ls -la vega/ | head -10)"
        else
          echo "‚ö†Ô∏è  Vega directory not found - creating empty directory"
          mkdir -p vega
          echo "üìÅ Created empty vega directory"
        fi
    
    - name: Start PHP server
      run: |
        docker compose -f docker-compose.html.yml up -d
        echo "Waiting for PHP server to be ready..."
        sleep 10
        
        # Wait for server to be healthy
        for i in {1..30}; do
          if curl -f http://localhost:8080/server/index.php > /dev/null 2>&1; then
            echo "PHP server is ready!"
            break
          fi
          echo "Waiting for PHP server... ($i/30)"
          sleep 2
        done
    
    - name: Check for PHP files
      id: check-php-files
      run: |
        echo "üîç Checking for PHP files in vega directory..."
        PHP_COUNT=$(find vega -name "*.php" -type f | wc -l)
        echo "üìÑ Found $PHP_COUNT PHP files"
        echo "php_count=$PHP_COUNT" >> $GITHUB_OUTPUT
        
        if [ "$PHP_COUNT" -eq 0 ]; then
          echo "‚ÑπÔ∏è  No PHP files found - skipping HTML sync"
          echo "skip_sync=true" >> $GITHUB_OUTPUT
        else
          echo "‚úÖ PHP files found - proceeding with HTML sync"
          echo "skip_sync=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Sync PHP to HTML
      if: steps.check-php-files.outputs.skip_sync == 'false'
      id: sync-html
      run: |
        echo "üîÑ Converting PHP files to HTML..."
        OUTPUT=$(vega-cli sync-html --server "${{ github.event.inputs.server_url || 'http://localhost:8080' }}" --verbose 2>&1)
        echo "$OUTPUT"
        
        # Extract folder list from output
        FOLDERS=$(echo "$OUTPUT" | grep "üìã FOLDERS_PROCESSED:" | sed 's/.*üìã FOLDERS_PROCESSED: //' || echo "[]")
        echo "folders=$FOLDERS" >> $GITHUB_OUTPUT
        echo "üìÇ Extracted folders: $FOLDERS"
    
    - name: Generate JSON data from HTML and upsert to DB
      if: steps.check-php-files.outputs.skip_sync == 'false' && steps.sync-html.outputs.folders != '[]'
      run: |
        echo "üîÑ Generating JSON data from HTML files and upserting to DB..."
        FOLDERS='${{ steps.sync-html.outputs.folders }}'
        echo "üìÇ Processing folders: $FOLDERS"
        
        # Parse JSON array and process each folder
        echo "$FOLDERS" | jq -r '.[]' | while read folder; do
          if [ -n "$folder" ] && [ "$folder" != "null" ]; then
            echo "üîÑ Processing folder: $folder"
            if [ -d "www/$folder" ]; then
              vega-cli html-to-json --input "www/$folder" --verbose
              echo "‚úÖ Generated JSON for folder: $folder"
              JSON_FILE="www/$folder/data_clean.json"
              if [ -f "$JSON_FILE" ]; then
                echo "üì§ Upserting to DB from $JSON_FILE"
                vega-cli upsert-db --file "$JSON_FILE" --verbose
                echo "‚úÖ Upsert completed for folder: $folder"
              else
                echo "‚ö†Ô∏è  JSON file not found for upsert: $JSON_FILE"
              fi
            else
              echo "‚ö†Ô∏è  Folder not found: www/$folder"
            fi
          fi
        done
        
        echo "‚úÖ JSON generation and DB upsert completed"
    
    - name: Stop PHP server
      if: always()
      run: |
        docker compose -f docker-compose.html.yml down
    
    - name: Check for HTML changes
      id: check-changes
      run: |
        if [ -n "$(git status --porcelain www/)" ]; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push HTML and JSON changes
      if: steps.check-changes.outputs.changes_detected == 'true' && steps.check-php-files.outputs.skip_sync == 'false'
      run: |
        git add www/
        git commit -m "Auto-sync: Generate HTML and JSON from PHP files

        - Converted PHP files to HTML using local PHP server
        - Generated JSON data from HTML files using html-to-json CLI
        - Processed folders: ${{ steps.sync-html.outputs.folders }}
        - Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        - Workflow: Sync HTML from PHP
        - Run ID: ${{ github.run_id }}"
        git push
    
    - name: Log completion
      run: |
        if [ "${{ steps.check-php-files.outputs.skip_sync }}" == "true" ]; then
          echo "‚ÑπÔ∏è  No PHP files found - HTML sync skipped"
        elif [ "${{ steps.check-changes.outputs.changes_detected }}" == "true" ]; then
          echo "‚úÖ HTML and JSON files generated and committed successfully"
          echo "üìÇ Processed folders: ${{ steps.sync-html.outputs.folders }}"
        else
          echo "‚ÑπÔ∏è  No HTML/JSON changes detected - skipping commit"
        fi
